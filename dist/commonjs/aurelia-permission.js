"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var aurelia_router_1 = require("aurelia-router");
var permission_store_1 = require("./permission-store");
exports.PermissionStore = permission_store_1.default;
var authorize_route_step_1 = require("./authorize-route-step");
var authorization_service_1 = require("./authorization-service");
exports.AuthorizationService = authorization_service_1.default;
var permission_1 = require("./permission");
exports.Permission = permission_1.Permission;
var permission_filter_1 = require("./permission-filter");
exports.PermissionFilterValueConverter = permission_filter_1.PermissionFilterValueConverter;
function configure(framework, configure) {
    var permissionStore = framework.container.get(permission_store_1.default);
    var authorizeRouteStep = framework.container.get(authorize_route_step_1.default);
    configure(permissionStore, {
        useDefaultRedirectRoute: function (route) {
            authorizeRouteStep.useDefaultRedirectRoute(route);
        }
    });
    var appRouter = framework.container.get(aurelia_router_1.AppRouter);
    var authorizePipelineStep = appRouter.pipelineProvider.steps.find(function (step) { return step.slotName === 'preActivate'; });
    authorizePipelineStep.steps.push(authorize_route_step_1.default);
    framework.globalResources([
        './permission',
        './permission-filter'
    ]);
}
exports.configure = configure;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hdXJlbGlhLXBlcm1pc3Npb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxpREFBMkM7QUFFM0MsdURBQWlEO0FBbUMvQywwQkFuQ0ssMEJBQWUsQ0FtQ0w7QUFsQ2pCLCtEQUF3RDtBQUN4RCxpRUFBMkQ7QUFrQ3pELCtCQWxDSywrQkFBb0IsQ0FrQ0w7QUFqQ3RCLDJDQUEwQztBQWtDeEMscUJBbENPLHVCQUFVLENBa0NQO0FBakNaLHlEQUFxRTtBQWtDbkUseUNBbENPLGtEQUE4QixDQWtDUDtBQTVCaEMsbUJBQ0UsU0FBaUMsRUFDakMsU0FBbUY7SUFFbkYsSUFBTSxlQUFlLEdBQW9CLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLDBCQUFlLENBQUMsQ0FBQztJQUNsRixJQUFNLGtCQUFrQixHQUF1QixTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyw4QkFBa0IsQ0FBQyxDQUFDO0lBRTNGLFNBQVMsQ0FBQyxlQUFlLEVBQUU7UUFDekIsdUJBQXVCLEVBQUUsVUFBQyxLQUFhO1lBQ3JDLGtCQUFrQixDQUFDLHVCQUF1QixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BELENBQUM7S0FDRixDQUFDLENBQUM7SUFHSCxJQUFNLFNBQVMsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQywwQkFBUyxDQUFDLENBQUM7SUFDckQsSUFBTSxxQkFBcUIsR0FBRyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFBLElBQUksSUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsS0FBSyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN6SCxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLDhCQUFrQixDQUFDLENBQUM7SUFFckQsU0FBUyxDQUFDLGVBQWUsQ0FBQztRQUN4QixjQUFjO1FBQ2QscUJBQXFCO0tBQ3RCLENBQUMsQ0FBQztBQUNMLENBQUM7QUF0QkQsOEJBc0JDIiwiZmlsZSI6ImF1cmVsaWEtcGVybWlzc2lvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZyYW1ld29ya0NvbmZpZ3VyYXRpb24gfSBmcm9tICdhdXJlbGlhLWZyYW1ld29yayc7XHJcbmltcG9ydCB7IEFwcFJvdXRlciB9IGZyb20gJ2F1cmVsaWEtcm91dGVyJztcclxuXHJcbmltcG9ydCBQZXJtaXNzaW9uU3RvcmUgZnJvbSAnLi9wZXJtaXNzaW9uLXN0b3JlJztcclxuaW1wb3J0IEF1dGhvcml6ZVJvdXRlU3RlcCBmcm9tICcuL2F1dGhvcml6ZS1yb3V0ZS1zdGVwJztcclxuaW1wb3J0IEF1dGhvcml6YXRpb25TZXJ2aWNlIGZyb20gJy4vYXV0aG9yaXphdGlvbi1zZXJ2aWNlJztcclxuaW1wb3J0IHsgUGVybWlzc2lvbiB9IGZyb20gJy4vcGVybWlzc2lvbic7XHJcbmltcG9ydCB7IFBlcm1pc3Npb25GaWx0ZXJWYWx1ZUNvbnZlcnRlciB9IGZyb20gJy4vcGVybWlzc2lvbi1maWx0ZXInO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDb25maWd1cmF0aW9uIHtcclxuICB1c2VEZWZhdWx0UmVkaXJlY3RSb3V0ZTogKHJvdXRlOiBzdHJpbmcpID0+IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1cmUoXHJcbiAgZnJhbWV3b3JrOiBGcmFtZXdvcmtDb25maWd1cmF0aW9uLFxyXG4gIGNvbmZpZ3VyZTogKHBlcm1pc3Npb25TdG9yZTogUGVybWlzc2lvblN0b3JlLCBjb25maWd1cmF0aW9uOiBDb25maWd1cmF0aW9uKSA9PiB2b2lkXHJcbikge1xyXG4gIGNvbnN0IHBlcm1pc3Npb25TdG9yZSA9IDxQZXJtaXNzaW9uU3RvcmU+ZnJhbWV3b3JrLmNvbnRhaW5lci5nZXQoUGVybWlzc2lvblN0b3JlKTtcclxuICBjb25zdCBhdXRob3JpemVSb3V0ZVN0ZXAgPSA8QXV0aG9yaXplUm91dGVTdGVwPmZyYW1ld29yay5jb250YWluZXIuZ2V0KEF1dGhvcml6ZVJvdXRlU3RlcCk7XHJcblxyXG4gIGNvbmZpZ3VyZShwZXJtaXNzaW9uU3RvcmUsIHtcclxuICAgIHVzZURlZmF1bHRSZWRpcmVjdFJvdXRlOiAocm91dGU6IHN0cmluZykgPT4ge1xyXG4gICAgICBhdXRob3JpemVSb3V0ZVN0ZXAudXNlRGVmYXVsdFJlZGlyZWN0Um91dGUocm91dGUpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICAvLyBDb25maWd1cmUgcGlwZWxpbmUgc3RlcCBmb3IgYXV0aG9yaXphdGlvbiBiZWZvcmUgYWN0aXZhdGUgaXMgaW52b2tlZFxyXG4gIGNvbnN0IGFwcFJvdXRlciA9IGZyYW1ld29yay5jb250YWluZXIuZ2V0KEFwcFJvdXRlcik7XHJcbiAgY29uc3QgYXV0aG9yaXplUGlwZWxpbmVTdGVwID0gYXBwUm91dGVyLnBpcGVsaW5lUHJvdmlkZXIuc3RlcHMuZmluZChzdGVwID0+IHsgcmV0dXJuIHN0ZXAuc2xvdE5hbWUgPT09ICdwcmVBY3RpdmF0ZSc7IH0pO1xyXG4gIGF1dGhvcml6ZVBpcGVsaW5lU3RlcC5zdGVwcy5wdXNoKEF1dGhvcml6ZVJvdXRlU3RlcCk7XHJcblxyXG4gIGZyYW1ld29yay5nbG9iYWxSZXNvdXJjZXMoW1xyXG4gICAgJy4vcGVybWlzc2lvbicsXHJcbiAgICAnLi9wZXJtaXNzaW9uLWZpbHRlcidcclxuICBdKTtcclxufVxyXG5cclxuZXhwb3J0IHtcclxuICBQZXJtaXNzaW9uU3RvcmUsXHJcbiAgQXV0aG9yaXphdGlvblNlcnZpY2UsXHJcbiAgUGVybWlzc2lvbixcclxuICBQZXJtaXNzaW9uRmlsdGVyVmFsdWVDb252ZXJ0ZXJcclxufVxyXG4iXX0=
